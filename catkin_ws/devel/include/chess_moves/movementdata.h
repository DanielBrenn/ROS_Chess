// Generated by gencpp from file chess_moves/movementdata.msg
// DO NOT EDIT!


#ifndef CHESS_MOVES_MESSAGE_MOVEMENTDATA_H
#define CHESS_MOVES_MESSAGE_MOVEMENTDATA_H

#include <ros/service_traits.h>


#include <chess_moves/movementdataRequest.h>
#include <chess_moves/movementdataResponse.h>


namespace chess_moves
{

struct movementdata
{

typedef movementdataRequest Request;
typedef movementdataResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct movementdata
} // namespace chess_moves


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::chess_moves::movementdata > {
  static const char* value()
  {
    return "4cd85a70bbf6cd984a90000cc83dfa07";
  }

  static const char* value(const ::chess_moves::movementdata&) { return value(); }
};

template<>
struct DataType< ::chess_moves::movementdata > {
  static const char* value()
  {
    return "chess_moves/movementdata";
  }

  static const char* value(const ::chess_moves::movementdata&) { return value(); }
};


// service_traits::MD5Sum< ::chess_moves::movementdataRequest> should match
// service_traits::MD5Sum< ::chess_moves::movementdata >
template<>
struct MD5Sum< ::chess_moves::movementdataRequest>
{
  static const char* value()
  {
    return MD5Sum< ::chess_moves::movementdata >::value();
  }
  static const char* value(const ::chess_moves::movementdataRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::chess_moves::movementdataRequest> should match
// service_traits::DataType< ::chess_moves::movementdata >
template<>
struct DataType< ::chess_moves::movementdataRequest>
{
  static const char* value()
  {
    return DataType< ::chess_moves::movementdata >::value();
  }
  static const char* value(const ::chess_moves::movementdataRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::chess_moves::movementdataResponse> should match
// service_traits::MD5Sum< ::chess_moves::movementdata >
template<>
struct MD5Sum< ::chess_moves::movementdataResponse>
{
  static const char* value()
  {
    return MD5Sum< ::chess_moves::movementdata >::value();
  }
  static const char* value(const ::chess_moves::movementdataResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::chess_moves::movementdataResponse> should match
// service_traits::DataType< ::chess_moves::movementdata >
template<>
struct DataType< ::chess_moves::movementdataResponse>
{
  static const char* value()
  {
    return DataType< ::chess_moves::movementdata >::value();
  }
  static const char* value(const ::chess_moves::movementdataResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // CHESS_MOVES_MESSAGE_MOVEMENTDATA_H
